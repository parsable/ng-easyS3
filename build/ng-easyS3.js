// Create all modules and define dependencies to make sure they exist
// and are loaded in the correct order to satisfy dependency injection
// before all nested files are concatenated by Grunt

// Config
'use strict';

angular.module('ngS3upload.config', []).value('ngS3upload.config', {
  debug: true
}).config(['$compileProvider', function ($compileProvider) {
  if (angular.isDefined($compileProvider.urlSanitizationWhitelist)) {
    $compileProvider.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/);
  } else {
    $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/);
  }
}]);

// Modules
angular.module('ngS3upload.directives', []);
angular.module('ngS3upload', ['ngS3upload.config', 'ngS3upload.directives', 'ngS3upload.services', 'ngSanitize']);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9uZy1lYXN5UzMvbmctZWFzeVMzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFLQSxPQUFPLENBQUMsTUFBTSxDQUFDLG1CQUFtQixFQUFFLEVBQUUsQ0FBQyxDQUNyQyxLQUFLLENBQUMsbUJBQW1CLEVBQUU7QUFDdkIsT0FBSyxFQUFFLElBQUk7Q0FDZCxDQUFDLENBQ0YsTUFBTSxDQUFDLENBQUMsa0JBQWtCLEVBQUUsVUFBUyxnQkFBZ0IsRUFBQztBQUNwRCxNQUFJLE9BQU8sQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsd0JBQXdCLENBQUMsRUFBRTtBQUNoRSxvQkFBZ0IsQ0FBQyx3QkFBd0IsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0dBQ2pGLE1BQU07QUFDTCxvQkFBZ0IsQ0FBQywwQkFBMEIsQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO0dBQ25GO0NBQ0YsQ0FBQyxDQUFDLENBQUM7OztBQUdOLE9BQU8sQ0FBQyxNQUFNLENBQUMsdUJBQXVCLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFDNUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxZQUFZLEVBQ3ZCLENBQ0ksbUJBQW1CLEVBQ25CLHVCQUF1QixFQUN2QixxQkFBcUIsRUFDckIsWUFBWSxDQUNmLENBQUMsQ0FBQyIsImZpbGUiOiJzcmMvbmctZWFzeVMzL25nLWVhc3lTMy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENyZWF0ZSBhbGwgbW9kdWxlcyBhbmQgZGVmaW5lIGRlcGVuZGVuY2llcyB0byBtYWtlIHN1cmUgdGhleSBleGlzdFxuLy8gYW5kIGFyZSBsb2FkZWQgaW4gdGhlIGNvcnJlY3Qgb3JkZXIgdG8gc2F0aXNmeSBkZXBlbmRlbmN5IGluamVjdGlvblxuLy8gYmVmb3JlIGFsbCBuZXN0ZWQgZmlsZXMgYXJlIGNvbmNhdGVuYXRlZCBieSBHcnVudFxuXG4vLyBDb25maWdcbmFuZ3VsYXIubW9kdWxlKCduZ1MzdXBsb2FkLmNvbmZpZycsIFtdKS5cbiAgdmFsdWUoJ25nUzN1cGxvYWQuY29uZmlnJywge1xuICAgICAgZGVidWc6IHRydWVcbiAgfSkuXG4gIGNvbmZpZyhbJyRjb21waWxlUHJvdmlkZXInLCBmdW5jdGlvbigkY29tcGlsZVByb3ZpZGVyKXtcbiAgICBpZiAoYW5ndWxhci5pc0RlZmluZWQoJGNvbXBpbGVQcm92aWRlci51cmxTYW5pdGl6YXRpb25XaGl0ZWxpc3QpKSB7XG4gICAgICAkY29tcGlsZVByb3ZpZGVyLnVybFNhbml0aXphdGlvbldoaXRlbGlzdCgvXlxccyooaHR0cHM/fGZ0cHxtYWlsdG98ZmlsZXxkYXRhKTovKTtcbiAgICB9IGVsc2Uge1xuICAgICAgJGNvbXBpbGVQcm92aWRlci5hSHJlZlNhbml0aXphdGlvbldoaXRlbGlzdCgvXlxccyooaHR0cHM/fGZ0cHxtYWlsdG98ZmlsZXxkYXRhKTovKTtcbiAgICB9XG4gIH1dKTtcblxuLy8gTW9kdWxlc1xuYW5ndWxhci5tb2R1bGUoJ25nUzN1cGxvYWQuZGlyZWN0aXZlcycsIFtdKTtcbmFuZ3VsYXIubW9kdWxlKCduZ1MzdXBsb2FkJyxcbiAgICBbXG4gICAgICAgICduZ1MzdXBsb2FkLmNvbmZpZycsXG4gICAgICAgICduZ1MzdXBsb2FkLmRpcmVjdGl2ZXMnLFxuICAgICAgICAnbmdTM3VwbG9hZC5zZXJ2aWNlcycsXG4gICAgICAgICduZ1Nhbml0aXplJ1xuICAgIF0pO1xuIl19;
'use strict';

angular.module('ngS3upload.config', []).constant('ngS3Config', {
  theme: 'bootstrap3'
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9uZy1lYXN5UzMvc2VydmljZXMvczMtY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLENBQUMsQ0FDckMsUUFBUSxDQUFDLFlBQVksRUFBRTtBQUNyQixPQUFLLEVBQUUsWUFBWTtDQUNwQixDQUFDLENBQUMiLCJmaWxlIjoic3JjL25nLWVhc3lTMy9zZXJ2aWNlcy9zMy1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJhbmd1bGFyLm1vZHVsZSgnbmdTM3VwbG9hZC5jb25maWcnLCBbXSkuXG4gIGNvbnN0YW50KCduZ1MzQ29uZmlnJywge1xuICAgIHRoZW1lOiAnYm9vdHN0cmFwMydcbiAgfSk7XG4iXX0=;
'use strict';

angular.module('ngS3upload.services', []).service('S3Uploader', ['$http', '$q', '$window', '$timeout', function ($http, $q, $window, $timeout) {
  this.uploads = 0;
  var self = this;

  this.getUploadOptions = function (uri) {
    var deferred = $q.defer();
    $http.get(uri).success(function (response, status) {
      deferred.resolve(response);
    }).error(function (error, status) {
      deferred.reject(error);
    });

    return deferred.promise;
  };

  this.randomString = function (length) {
    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';
    var result = '';
    for (var i = length; i > 0; --i) result += chars[Math.round(Math.random() * (chars.length - 1))];

    return result;
  };

  this.upload = function (scope, uri, key, acl, type, accessKey, policy, signature, file) {
    var deferred = $q.defer();
    scope.attempt = true;

    var fd = new FormData();
    fd.append('key', key);
    fd.append('acl', acl);
    fd.append('Content-Type', file.type);
    fd.append('AWSAccessKeyId', accessKey);
    fd.append('policy', policy);
    fd.append('signature', signature);
    fd.append('file', file);

    var xhr = new XMLHttpRequest();
    xhr.upload.addEventListener('progress', uploadProgress, false);
    xhr.addEventListener('load', uploadComplete, false);
    xhr.addEventListener('error', uploadFailed, false);
    xhr.addEventListener('abort', uploadCanceled, false);
    scope.$emit('s3upload:start', xhr);

    // Define event handlers
    function uploadProgress(e) {
      scope.$apply(function () {
        if (e.lengthComputable) {
          scope.progress = Math.round(e.loaded * 100 / e.total);
        } else {
          scope.progress = 'unable to compute';
        }
        var msg = { type: 'progress', value: scope.progress };
        scope.$emit('s3upload:progress', msg);
        if (typeof deferred.notify === 'function') {
          deferred.notify(msg);
        }
      });
    }
    function uploadComplete(e) {
      var xhr = e.srcElement || e.target;
      scope.$apply(function () {
        self.uploads--;
        scope.uploading = false;
        //zero out progress for animation
        $timeout(function () {
          scope.progress = 0;
        }, 300);
        if (xhr.status === 204) {
          // successful upload
          scope.success = true;
          deferred.resolve(xhr);
          scope.$emit('s3upload:success', xhr, { path: uri + key });
        } else {
          scope.success = false;
          deferred.reject(xhr);
          scope.$emit('s3upload:error', xhr);
        }
      });
    }
    function uploadFailed(e) {
      var xhr = e.srcElement || e.target;
      scope.$apply(function () {
        self.uploads--;
        scope.uploading = false;
        scope.success = false;
        deferred.reject(xhr);
        scope.$emit('s3upload:error', xhr);
      });
    }
    function uploadCanceled(e) {
      var xhr = e.srcElement || e.target;
      scope.$apply(function () {
        self.uploads--;
        scope.uploading = false;
        scope.success = false;
        deferred.reject(xhr);
        scope.$emit('s3upload:abort', xhr);
      });
    }

    // Send the file
    scope.uploading = true;
    this.uploads++;
    xhr.open('POST', uri, true);
    xhr.send(fd);

    return deferred.promise;
  };

  this.isUploading = function () {
    return this.uploads > 0;
  };
}]);
//# sourceMappingURL=data:application/json;base64,;
'use strict';

angular.module('ngS3upload.directives', []).directive('s3Upload', ['$parse', 'S3Uploader', 'ngS3Config', function ($parse, S3Uploader, ngS3Config) {
  return {
    restrict: 'AC',
    require: '?ngModel',
    replace: true,
    transclude: false,
    scope: true,
    controller: ['$scope', '$element', '$attrs', '$transclude', function ($scope, $element, $attrs, $transclude) {
      $scope.attempt = false;
      $scope.success = false;
      $scope.uploading = false;
    }],
    compile: function compile(element, attr, linker) {
      return {
        pre: function pre($scope, $element, $attr) {
          if (angular.isUndefined($attr.bucket)) {
            throw Error('bucket is a mandatory attribute');
          }
        },
        post: function post(scope, element, attrs, ngModel) {
          // Build the opts array
          var opts = angular.extend({}, scope.$eval(attrs.s3UploadOptions || attrs.options));
          opts = angular.extend({
            submitOnChange: true,
            getOptionsUri: '/getS3Options',
            getManualOptions: null,
            mimeTypes: [],
            acl: 'public-read',
            uploadingKey: 'uploading',
            folder: '',
            buttonText: 'Select File',
            dropText: 'Drop File Here',
            errorText: 'Incorrect File Type',
            enableValidation: true,
            targetFilename: null
          }, opts);
          var bucket = scope.$eval(attrs.bucket);
          scope.buttonText = opts.buttonText;
          scope.dropText = opts.dropText;
          scope.errorText = opts.errorText;
          scope.displayError = false;

          // Bind the button click event
          var file = document.getElementById('s3-file-target'),
              filedrag = document.getElementById('s3-drop-target');

          filedrag.addEventListener('click', function (e) {
            file.click();
          });

          function Init() {
            // file drop
            filedrag.addEventListener('dragover', FileDragHover, false);
            filedrag.addEventListener('dragleave', FileDragHover, false);
            filedrag.addEventListener('drop', FileSelectHandler, false);
            filedrag.style.display = 'block';
          }

          function FileDragHover(e) {
            e.stopPropagation();
            e.preventDefault();
            e.target.className = e.type == 'dragover' ? 'hover' : '';
          }

          if (window.File && window.FileList && window.FileReader) {
            Init();
          }

          // file selection
          function FileSelectHandler(e) {

            // cancel event and hover styling
            FileDragHover(e);

            // fetch FileList object
            uploadFile((e.target.files || e.dataTransfer.files)[0]);
          }

          // Update the scope with the view value
          ngModel.$render = function () {
            scope.filename = ngModel.$viewValue;
          };

          function uploadFile(selectedFile) {
            var filename, mimeTypeMatch, ext;
            if (arguments.length === 0) {
              selectedFile = file.files[0];
            }
            filename = selectedFile.name;
            mimeTypeMatch = false;
            if (opts.mimeTypes.length > 0) {
              mimeTypeMatch = opts.mimeTypes.some(function (element) {
                if (selectedFile.type.match(element)) {
                  return true;
                }
                return false;
              });
            } else {
              mimeTypeMatch = true;
            }

            if (!mimeTypeMatch) {
              scope.displayError = true;
              return;
            }
            scope.displayError = false;
            ext = filename.split('.').pop();

            if (angular.isObject(opts.getManualOptions)) {
              _upload(opts.getManualOptions);
            } else {
              S3Uploader.getUploadOptions(opts.getOptionsUri).then(function (s3Options) {
                _upload(s3Options);
              }, function (error) {
                throw Error('Can\'t receive the needed options for S3 ' + error);
              });
            }

            function _upload(s3Options) {
              if (opts.enableValidation) {
                ngModel.$setValidity('uploading', false);
              }

              var s3Uri = 'https://' + bucket + '.s3.amazonaws.com/';
              var key = opts.folder + new Date().getTime() + '-' + S3Uploader.randomString(16) + '.' + ext;
              S3Uploader.upload(scope, s3Uri, key, opts.acl, selectedFile.type, s3Options.key, s3Options.policy, s3Options.signature, selectedFile).then(function () {
                ngModel.$setViewValue(s3Uri + key);
                scope.filename = ngModel.$viewValue;

                if (opts.enableValidation) {
                  ngModel.$setValidity('uploading', true);
                  ngModel.$setValidity('succeeded', true);
                }
              }, function () {
                scope.filename = ngModel.$viewValue;

                if (opts.enableValidation) {
                  ngModel.$setValidity('uploading', true);
                  ngModel.$setValidity('succeeded', false);
                }
              });
            }
          };

          element.bind('change', function (nVal) {
            if (opts.submitOnChange) {
              scope.$apply(function () {
                uploadFile();
              });
            }
          });

          if (angular.isDefined(attrs.doUpload)) {
            scope.$watch(attrs.doUpload, function (value) {
              if (value) uploadFile();
            });
          }
        }
      };
    },
    templateUrl: 'ng-easyS3.html'
  };
}]);
//# sourceMappingURL=data:application/json;base64,;
angular.module('ngS3upload').run(['$templateCache', function($templateCache) {
  'use strict';

  $templateCache.put('ng-easyS3.html',
    "<div class=\"upload-wrap\">\n" +
    "  <style scoped>\n" +
    "    #s3-drop-target{\n" +
    "      height: 100px;\n" +
    "      width: 100%;\n" +
    "      display: flex !important;\n" +
    "      flex-direction: column;\n" +
    "      justify-content: center;\n" +
    "      align-items: center;\n" +
    "      border-radius: 8px;\n" +
    "      border: 3px dashed #999;\n" +
    "      color: #999;\n" +
    "      font-size: 24px;\n" +
    "      font-weight: bold;\n" +
    "      text-transform: capitalize;\n" +
    "      background-color: rgb(238, 238, 238);\n" +
    "    }\n" +
    "\n" +
    "    #s3-drop-target.hover{\n" +
    "      border: 3px dashed #777;\n" +
    "      color: #777;\n" +
    "      background-color: rgb(225, 225, 225);\n" +
    "    }\n" +
    "\n" +
    "    #s3-drop-target:hover{\n" +
    "      border: 3px dashed #777;\n" +
    "      color: #777;\n" +
    "      background-color: rgb(225, 225, 225);\n" +
    "      cursor: pointer;\n" +
    "    }\n" +
    "\n" +
    "    .progress{\n" +
    "      margin-bottom: 0;\n" +
    "      height: 50%;\n" +
    "    }\n" +
    "\n" +
    "    .S3-front, .S3-back{\n" +
    "      display: flex;\n" +
    "      flex-direction: column;\n" +
    "      justify-content: center;\n" +
    "    }\n" +
    "\n" +
    "    /* entire container, keeps perspective */\n" +
    "    .S3-display {\n" +
    "      perspective: 1000;\n" +
    "      position: relative;\n" +
    "    }\n" +
    "    /* flip the pane when hovered */\n" +
    "    .S3-display.S3-uploading .S3-flipper {\n" +
    "      transform: rotateX(-180deg);\n" +
    "    }\n" +
    "\n" +
    "    .S3-display, .S3-front, .S3-back {\n" +
    "      width: 100%;\n" +
    "      height: 100px;\n" +
    "    }\n" +
    "\n" +
    "    /* flip speed goes here */\n" +
    "    .S3-flipper {\n" +
    "      transition: 0.3s;\n" +
    "      transform-style: preserve-3d;\n" +
    "      position: relative;\n" +
    "      transform-origin: 100% 50px; /* half of height */*/\n" +
    "    }\n" +
    "\n" +
    "    /* hide back of pane during swap */\n" +
    "    .S3-front, .S3-back {\n" +
    "      backface-visibility: hidden;\n" +
    "\n" +
    "      position: absolute;\n" +
    "      top: 0;\n" +
    "      left: 0;\n" +
    "    }\n" +
    "\n" +
    "    /* front pane, placed above back */\n" +
    "    .S3-front {\n" +
    "      z-index: 2;\n" +
    "      /* for firefox 31 */\n" +
    "      transform: rotateX(0deg);\n" +
    "    }\n" +
    "\n" +
    "    /* back, initially hidden pane */\n" +
    "    .S3-back {\n" +
    "      transform: rotateX(180deg);\n" +
    "    }\n" +
    "\n" +
    "\n" +
    "  </style>\n" +
    "  <div class=\"S3-display\" ng-class=\"{'S3-uploading': uploading}\">\n" +
    "    <div class=\"S3-flipper\">\n" +
    "      <div class=\"S3-front\">\n" +
    "        <div id=\"s3-drop-target\">\n" +
    "          <span>{{dropText}}</span>\n" +
    "          <span ng-show=\"displayError\" class=\"text-danger\"> File Type Error: {{errorText}}</span>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "      <div class=\"S3-back\">\n" +
    "        <div class=\"progress\">\n" +
    "          <div class=\"progress-bar\" ng-class=\"{'active': uploading, 'bar-success': attempt && !uploading && success}\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: {{ progress }}%;\">\n" +
    "            <span class=\"sr-only\">{{progress}}% Complete</span>\n" +
    "          </div>\n" +
    "        </div>\n" +
    "      </div>\n" +
    "    </div>\n" +
    "  </div>\n" +
    "  <input type=\"file\" style=\"display: none\" id=\"s3-file-target\"/>\n" +
    "</div>\n"
  );

}]);
