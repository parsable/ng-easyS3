/*! ngs3upload 07-04-2015 */
"use strict";angular.module("ngS3upload.config",[]).value("ngS3upload.config",{debug:!0}).config(["$compileProvider",function(a){angular.isDefined(a.urlSanitizationWhitelist)?a.urlSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/):a.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|file|data):/)}]),angular.module("ngS3upload.directives",[]),angular.module("ngS3upload",["ngS3upload.config","ngS3upload.directives","ngS3upload.services","ngSanitize"]),angular.module("ngS3upload.config",[]).constant("ngS3Config",{theme:"bootstrap3"}),angular.module("ngS3upload.services",[]).service("S3Uploader",["$http","$q","$window",function(a,b,c){this.uploads=0;var d=this;this.getUploadOptions=function(c){var d=b.defer();return a.get(c).success(function(a,b){d.resolve(a)}).error(function(a,b){d.reject(a)}),d.promise},this.randomString=function(a){for(var b="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",c="",d=a;d>0;--d)c+=b[Math.round(Math.random()*(b.length-1))];return c},this.upload=function(a,c,e,f,g,h,i,j,k){function l(b){a.$apply(function(){a.progress=b.lengthComputable?Math.round(100*b.loaded/b.total):"unable to compute";var c={type:"progress",value:a.progress};a.$emit("s3upload:progress",c),"function"==typeof p.notify&&p.notify(c)})}function m(b){var f=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,204===f.status?(a.success=!0,p.resolve(f),a.$emit("s3upload:success",f,{path:c+e})):(a.success=!1,p.reject(f),a.$emit("s3upload:error",f))})}function n(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,p.reject(c),a.$emit("s3upload:error",c)})}function o(b){var c=b.srcElement||b.target;a.$apply(function(){d.uploads--,a.uploading=!1,a.success=!1,p.reject(c),a.$emit("s3upload:abort",c)})}var p=b.defer();a.attempt=!0;var q=new FormData;q.append("key",e),q.append("acl",f),q.append("Content-Type",k.type),q.append("AWSAccessKeyId",h),q.append("policy",i),q.append("signature",j),q.append("file",k);var r=new XMLHttpRequest;return r.upload.addEventListener("progress",l,!1),r.addEventListener("load",m,!1),r.addEventListener("error",n,!1),r.addEventListener("abort",o,!1),a.$emit("s3upload:start",r),a.uploading=!0,this.uploads++,r.open("POST",c,!0),r.send(q),p.promise},this.isUploading=function(){return this.uploads>0}}]),angular.module("ngS3upload.directives",[]).directive("s3Upload",["$parse","S3Uploader","ngS3Config",function(a,b,c){return{restrict:"AC",require:"?ngModel",replace:!0,transclude:!1,scope:!0,controller:["$scope","$element","$attrs","$transclude",function(a,b,c,d){a.attempt=!1,a.success=!1,a.uploading=!1,a.barClass=function(){return{"bar-success":a.attempt&&!a.uploading&&a.success}}}],compile:function(a,c,d){return{pre:function(a,b,c){if(angular.isUndefined(c.bucket))throw Error("bucket is a mandatory attribute")},post:function(a,c,d,e){function f(){var a=(document.getElementById("s3-file-target"),document.getElementById("s3-drop-target"));a.addEventListener("drop",g,!1),a.style.display="block"}function g(a){var b=a.target.files||a.dataTransfer.files;console.log(b)}var h=angular.extend({},a.$eval(d.s3UploadOptions||d.options));h=angular.extend({submitOnChange:!0,getOptionsUri:"/getS3Options",getManualOptions:null,acl:"public-read",uploadingKey:"uploading",folder:"",enableValidation:!0,targetFilename:null},h);var i=a.$eval(d.bucket),j=angular.element(document.getElementById("s3-button-target")),k=angular.element(c.find("input")[0]);console.log(j),j.bind("click",function(a){console.log("test this"),k[0].click()}),window.File&&window.FileList&&window.FileReader&&f(),e.$render=function(){a.filename=e.$viewValue};var l=function(){function c(c){h.enableValidation&&e.$setValidity("uploading",!1);var f="https://"+i+".s3.amazonaws.com/",j=h.folder+(new Date).getTime()+"-"+b.randomString(16)+"."+g;b.upload(a,f,j,h.acl,d.type,c.key,c.policy,c.signature,d).then(function(){e.$setViewValue(f+j),a.filename=e.$viewValue,h.enableValidation&&(e.$setValidity("uploading",!0),e.$setValidity("succeeded",!0))},function(){a.filename=e.$viewValue,h.enableValidation&&(e.$setValidity("uploading",!0),e.$setValidity("succeeded",!1))})}var d=k[0].files[0],f=d.name,g=f.split(".").pop();angular.isObject(h.getManualOptions)?c(h.getManualOptions):b.getUploadOptions(h.getOptionsUri).then(function(a){c(a)},function(a){throw Error("Can't receive the needed options for S3 "+a)})};c.bind("change",function(b){h.submitOnChange&&a.$apply(function(){l()})}),angular.isDefined(d.doUpload)&&a.$watch(d.doUpload,function(a){a&&l()})}}},templateUrl:function(a,b){var d=b.theme||c.theme;return"theme/"+d+".html"}}}]),angular.module("ngS3upload").run(["$templateCache",function(a){a.put("theme/bootstrap2.html",'<div class="upload-wrap">\n  <button class="btn btn-primary" type="button"><span ng-if="!filename">Choose file</span><span ng-if="filename">Replace file</span></button>\n  <a ng-href="{{ filename  }}" target="_blank" class="" ng-if="filename" > Stored file </a>\n  <div class="progress progress-striped" ng-class="{active: uploading}" ng-show="attempt" style="margin-top: 10px">\n    <div class="bar" style="width: {{ progress }}%;" ng-class="barClass()"></div>\n    </div>\n  <input type="file" style="display: none"/>\n</div>'),a.put("theme/bootstrap3.html",'<div class="upload-wrap">\n  <button class="btn btn-primary" type="button" style="margin-bottom: 10px" id="s3-button-target">\n    <span>Choose file</span>\n  </button>\n\n  <div id="s3-drop-target" style="height: 300px; width: 300px; background-color: #eee"> drop file here</div>\n  <div class="progress" >\n    <div class="progress-bar progress-bar-striped" ng-class="{active: uploading}" role="progressbar" aria-valuemin="0" aria-valuemax="100" style="width: {{ progress }}%;" ng-class="barClass()">\n      <span class="sr-only">{{progress}}% Complete</span>\n    </div>\n  </div>\n  <input type="file" style="display: none" id="s3-file-target"/>\n</div>\n')}]);